test:
  (description): Runs all tests in the Flutter project with coverage enabled.
  (scripts):
    - flutter test --coverage --concurrency=4 --test-randomize-ordering-seed=random --update-goldens

posttest:
  (description): Generates a coverage report from the test coverage data.
  (scripts):
    - genhtml coverage/lcov.info -o coverage/ --quiet

reinstall:
  (description): Cleans and reinstalls the Flutter project by removing old builds, fetching dependencies, running code generators, and formatting the code.
  (scripts):
    - flutter clean
    - flutter pub get
    - $bootstrap

bootstrap:
  (description): Initializes the project by generating necessary code, sorting imports, applying fixes, and formatting.
  (scripts):
    - $generate
    - $format

generate:
  (description): Runs code generation builders and sorts imports to set up project files.
  (scripts):
    - dart run build_runner build --delete-conflicting-outputs
    - dart run generate_barrel_files.dart

format:
  (description): Applies automated fixes, sorts imports, and formats the codebase to ensure consistent code quality.
  (scripts):
    - dart fix --apply
    - dart run import_sorter:main -e
    - dart format --line-length 120 .

ci:
  (description): Ensures that the lockfile is enforced by getting dependencies in a CI environment.
  (scripts): flutter pub get --enforce-lockfile

dry:
  (description): Checks for outdated dependencies and saves the results in JSON format.
  (scripts): flutter pub outdated --json > logs/outdated.json

hard:
  (description): Forces an upgrade of Flutter and its packages to their latest versions and updates CocoaPods dependencies for iOS.
  (scripts):
    - flutter upgrade --force
    - $up --major-versions --tighten

up:
  (description): Upgrades Flutter dependencies to their latest compatible versions.
  (scripts): flutter packages upgrade
